name: Nightly build Android

on:
  push:
    tags:
      - 'Nightly_a'

jobs:
  build:

    runs-on: ubuntu-latest
    permissions: write-all

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        path: 'gh-clone/simutrans'

    - name: Install dependencies
      run: |
        sudo dpkg --add-architecture i386
        sudo apt-get -yqq update
        sudo apt-get -ym install curl expect git libc6:i386 libgcc1:i386 libncurses5:i386 libstdc++6:i386 zlib1g:i386 openjdk-17-jdk wget unzip vim make subversion zip

    - name: Setup Android SDK environment variables
      run: |
        echo "ANDROID_HOME=/opt/android-sdk-linux" >> $GITHUB_ENV
        echo "ANDROID_SDK_HOME=/opt/android-sdk-linux" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=/opt/android-sdk-linux" >> $GITHUB_ENV
        echo "ANDROID_SDK=/opt/android-sdk-linux" >> $GITHUB_ENV
        echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV

    - name: Create working directory for next steps
      run: |
        sudo mkdir /opt/android-sdk-linux
        sudo mkdir /android-sdl
        sudo chown -R runner /opt/android-sdk-linux
        sudo chgrp -R docker /opt/android-sdk-linux
        sudo chown -R runner /android-sdl
        sudo chgrp -R docker /android-sdl

    - name: Install Android SDK tools
      working-directory: /opt/android-sdk-linux
      run: |
        wget https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip
        unzip commandlinetools-linux-7583922_latest.zip
        rm commandlinetools-linux-7583922_latest.zip
        mv cmdline-tools latest
        mkdir cmdline-tools
        mv latest cmdline-tools/latest
        echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH

    - name: Install Android SDK dependencies
      working-directory: /opt/android-sdk-linux
      run: |
        yes | sdkmanager --licenses
        yes | sdkmanager --install "platform-tools"
        echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
        yes | sdkmanager --install "build-tools;34.0.0-rc3"
        echo "$ANDROID_HOME/build-tools/34.0.0-rc3" >> $GITHUB_PATH
        yes | sdkmanager --install "cmake;3.22.1"
        echo "$ANDROID_HOME/cmake/3.22.1/bin" >> $GITHUB_PATH
        yes | sdkmanager --install "ndk;25.1.8937393"
        echo "$ANDROID_HOME/ndk/25.1.8937393" >> $GITHUB_PATH
        echo "$ANDROID_HOME/ndk/25.1.8937393/toolchains/llvm/prebuilt/linux-x86_64/bin/" >> $GITHUB_PATH
        ln -s llvm-objdump ${ANDROID_HOME}/ndk/25.1.8937393/toolchains/llvm/prebuilt/linux-x86_64/bin/objdump

    - name: Install keystore for Android APK signing
      run: |
        mkdir /home/runner/.android/
        keytool -genkey -v -keystore /home/runner/.android/debug.keystore -alias androiddebugkey -keyalg RSA -keysize 2048 -validity 10000 -keypass android -storepass android -dname "cn=example.com,ou=exampleou,dc=example,dc=com"

    - name: Set up android project
      working-directory: /android-sdl
      run: |
        git clone --depth 1 https://github.com/simutrans/simutrans-android-project
        cd simutrans-android-project
        git submodule init
        git submodule update --depth 1
        cp -r $GITHUB_WORKSPACE/gh-clone/simutrans simutrans/jni/simutrans
        cp -r simutrans/jni/SDL/android-project/app/src/main/java simutrans/src/main
        cd simutrans/jni
        ./simutrans/src/android/AndroidPreBuild.sh
        cp -rf simutrans/simutrans/. ../src/main/assets


    - name: Build libraries
      working-directory: /android-sdl/simutrans-android-project/simutrans/jni
      run: |
        ./build_libraries.sh
        # Fluidsynth is a PITA to build; using the prebuilt release instead
        wget https://github.com/FluidSynth/fluidsynth/releases/download/v2.3.1/fluidsynth-2.3.1-android24.zip
        unzip fluidsynth-*.zip -d fluidsynth


    # pelya building script expects that 1/ simutrans is found inside /android-sdl/project/jni/application/simutrans/simutrans and 2/ that it is a svn repo, as revision.h is populated by svn command line
    # the content of actions/checkout is a git repo so it is not compatible
    # so we just checkout the meta informations
    - name: Setup Android SDL working folder to host Simutrans (current branch)
      working-directory: /android-sdl
      run: |
        CURRENT_BRANCH="master"
        echo $CURRENT_BRANCH
        echo $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/$CURRENT_BRANCH
        mv $GITHUB_WORKSPACE/gh-clone/simutrans project/jni/application/simutrans/
        chmod +755 project/jni/application/simutrans/simutrans/tools/get_revision.sh
        chmod +755 project/jni/application/simutrans/simutrans/tools/get_lang_files.sh
        chmod +755 project/jni/application/simutrans/simutrans/src/android/AndroidPreBuild.sh
        echo $(ls -al project/jni/application/simutrans/simutrans/android)
        cp -f project/jni/application/simutrans/simutrans/src/android/AndroidAppSettings.cfg project/jni/application/simutrans/
        cp -f project/jni/application/simutrans/simutrans/src/android/AndroidBuild.sh project/jni/application/simutrans/
        cp -f project/jni/application/simutrans/simutrans/src/android/AndroidPreBuild.sh project/jni/application/simutrans/
        cp -f project/jni/application/simutrans/simutrans/src/android/icon.png project/jni/application/simutrans/
    # End of environment setup (dependencies installed, source code at correct location)

    # some temporary changes to Android SDL are stored in <repo>/.github/android
    - name: (Temporary) Patch Android SDL and replace version
      working-directory: /android-sdl
      run: |
        read text < project/jni/application/simutrans/simutrans/src/simutrans/revision.h
        revision=${text:17:5}
        sed -i "s/^AppVersionCode=[0-9]\+/AppVersionCode=$revision/" ./project/jni/application/simutrans/AndroidAppSettings.cfg
        sed -i "s/^AppVersionName=\"[0-9]\+.[0-9]\+\"/AppVersionName=\"r$(cd project/jni/application/simutrans/simutrans; tools/get_revision.sh)\"/" ./project/jni/application/simutrans/AndroidAppSettings.cfg

    - name: Update binaries of Nightly Release aab
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: /android-sdl/project/app/build/outputs/bundle/release/simuandroid-multi-nightly.apk
        asset_name: simuandroid-multi-nightly_r.apk
        tag: Nightly
        overwrite: true
